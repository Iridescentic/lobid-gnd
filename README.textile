h1. About

lobid-gnd: access GND data as JSON-LD over HTTP.

"!https://secure.travis-ci.org/hbz/lobid-gnd.png?branch=master!":https://travis-ci.org/hbz/lobid-gnd

h1. Setup

h2. Prerequisites

@sbt 0.13@ or newer &mdash; "download sbt":http://www.scala-sbt.org/download.html

Elasticsearch 5.6.x (configured in @application.conf@)

h2. Build

Get the code, change into the project directory, and run the tests:

@git clone https://github.com/hbz/lobid-gnd.git ; cd lobid-gnd ; sbt test@

h2. Data

h3. Baseline

h4. Get the RDF data

Set up a location for the input data:

@mkdir input_data; cd input_data@

Set up 'input_data' as the 'data.rdfxml' location in 'conf/application.conf'.

Get the GND RDF/XML source data â€“ for the @20190213@ release here, find current at "https://data.dnb.de/opendata/":https://data.dnb.de/opendata/:

@wget https://data.dnb.de/opendata/authorities-{geografikum,koerperschaft,kongress,name,person,sachbegriff,werk}_lds_20190213.rdf.gz@

This should give you 7 local files ending with '.rdf.gz'. Go back to the project root directory:

@cd ..@

h4. Convert RDF to JSON

Set up a location for the index data:

@mkdir index_data@

Set up 'index_data' as the 'data.jsonlines' location in 'conf/application.conf'.

Set 'index.name.boot' in 'conf/application.conf' to an existing index name. This index will be used to get labels during the conversion process.

Set 'index.name.prod' in 'conf/application.conf' to a non-existing index name. This index name will be used in the indexing data created during conversion.

Convert the data to JSON-LD lines, the index data format:

@sbt "runMain apps.ConvertBaseline"@

To be able to log out from the server while the conversion is running, we actually use:

@setsid nohup sbt "runMain apps.ConvertBaseline" &@

This should create 7 '*.jsonl' files in 'index_data'.

h4. Index the JSON data

If the 'index.name.prod' configured in 'application.conf' does not exists, a new index will be created.

To start the indexing, run:

@sbt "runMain apps.Index baseline"@

h3. Updates

h4. Get and convert the updates

Updates are pulled via "the DNB OAI-PMH interface":http://www.dnb.de/DE/Service/DigitaleDienste/OAI/oai_node.html.

Pass either one argument, the start date for getting updates, or two, the start and the end date:

@sbt "runMain apps.ConvertUpdates 2019-02-13 2019-03-13"@

The date of the most recent update is stored in 'GND-lastSuccessfulUpdate.txt' (can be changed in the config).

The original downloaded data and the converted data are stored in separate files. To convert the data again without downloading it, use the steps described above under 'Convert RDF to JSON' with the update RDF data.

h4. Index the updates

To index the updates run:

@sbt "runMain apps.Index updates"@

See 'application.conf' for details on the configured file names etc.

h2. Web

In 'lobid-gnd', run the web application:

@sbt run@

Open "http://localhost:9000/gnd":http://localhost:9000/gnd

h2. Eclipse

To set up an Eclipse project, first generate the Eclipse config for your machine:

@sbt "eclipse with-source=true"@

Then import the project in Eclipse: "File" > "Import" > "Existing Projects into Workspace".